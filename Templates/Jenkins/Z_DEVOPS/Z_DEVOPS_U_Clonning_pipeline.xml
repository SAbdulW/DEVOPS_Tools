com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.16">
<actions/>
<description>Job for cloning a input view</description>
<keepDependencies>false</keepDependencies>
<properties>
<com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.14">
<optOut>false</optOut>
</com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
<hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
<useBuildBlocker>false</useBuildBlocker>
</hudson.plugins.buildblocker.BuildBlockerProperty>
<hudson.model.ParametersDefinitionProperty>
<parameterDefinitions>
<hudson.model.StringParameterDefinition>
<name>shortViewName</name>
<description>
Put the target viewName. Example, want to inject the fixture pipeline to the current view EM_11.2SP1 Then the value of viewName is: EM_11.2SP1 Z_DEVOPS_11.2SP1 If it is under folder, give the full path: /job/Z_DEVOPS/job/11.2SP1/view/Z_DEVOPS_11.2SP1
</description>
<defaultValue/>
</hudson.model.StringParameterDefinition>
<hudson.model.StringParameterDefinition>
<name>fullViewPath</name>
<description>
If you view URL is: http://atljenkinsstaging:8080/job/EM/view/EM_11.2SP1/ Then the fullViewPath: /job/EM
</description>
<defaultValue/>
</hudson.model.StringParameterDefinition>
<hudson.model.StringParameterDefinition>
<name>JenkinsURL_Push</name>
<description/>
<defaultValue>http://atljenkinsstaging:8080/</defaultValue>
</hudson.model.StringParameterDefinition>
<hudson.model.StringParameterDefinition>
<name>userName</name>
<description/>
<defaultValue>htang</defaultValue>
</hudson.model.StringParameterDefinition>
<hudson.model.PasswordParameterDefinition>
<name>userPassword</name>
<description/>
<defaultValue>nWCW7zXTIiNqulGJ4oKfmJ2adU9a5jsABLtaxQJi97c=</defaultValue>
</hudson.model.PasswordParameterDefinition>
<hudson.model.TextParameterDefinition>
<name>JobsList</name>
<description>
Default would be empty, as it will take from the View. This field value will override the viewName, would mean, the job will do the pull and push the list of jobs here. Example: divide by , Z_DEVOPS (Commit Build),Z_DEVOPS_(AssignMachine),Z_DEVOPS_(Puppet),Z_DEVOPS_(Back2Pool),Z_DEVOPS_(RAFTests),Z_DEVOPS_(Back2Pool),Z_DEVOPS_(ArtifactoryPromotion)
</description>
<defaultValue>
Z_DEVOPS_(AssignMachine),Z_DEVOPS_(Puppet),Z_DEVOPS_(Back2Pool),Z_DEVOPS_(RAFTests)
</defaultValue>
</hudson.model.TextParameterDefinition>
<hudson.model.StringParameterDefinition>
<name>DevRootPath</name>
<description/>
<defaultValue>/usr/share/gitroot/JobsBuilderFolderZ</defaultValue>
</hudson.model.StringParameterDefinition>
</parameterDefinitions>
</hudson.model.ParametersDefinitionProperty>
</properties>
<scm class="hudson.scm.NullSCM"/>
<assignedNode>master</assignedNode>
<canRoam>false</canRoam>
<disabled>false</disabled>
<blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
<blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
<jdk>(Default)</jdk>
<triggers/>
<concurrentBuild>false</concurrentBuild>
<customWorkspace>${DevRootPath}</customWorkspace>
<builders>
<hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.25">
<configs>
<hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
<configs>
<hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
<properties>
ProcessToRun=Pull,Push Regex=Z_DEVOPS,/job/ Replacement=${shortViewName},${fullViewPath}/job/ UserName_Pull=${userName} Password_Pull=${userPassword} UserName_Push=${userName} Password_Push=${userPassword} JenkinsURL_Push=${JenkinsURL_Push} JobsList=${JobsList} DevRootPath=${DevRootPath} fullViewPath=${fullViewPath}
</properties>
</hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
</configs>
<projects>Z_JobsBuilderFolder</projects>
<condition>ALWAYS</condition>
<triggerWithNoParameters>false</triggerWithNoParameters>
<block>
<buildStepFailureThreshold>
<name>FAILURE</name>
<ordinal>2</ordinal>
<color>RED</color>
<completeBuild>true</completeBuild>
</buildStepFailureThreshold>
<unstableThreshold>
<name>UNSTABLE</name>
<ordinal>1</ordinal>
<color>YELLOW</color>
<completeBuild>true</completeBuild>
</unstableThreshold>
<failureThreshold>
<name>FAILURE</name>
<ordinal>2</ordinal>
<color>RED</color>
<completeBuild>true</completeBuild>
</failureThreshold>
</block>
<buildAllNodesWithLabel>false</buildAllNodesWithLabel>
</hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
</configs>
</hudson.plugins.parameterizedtrigger.TriggerBuilder>
</builders>
<publishers/>
<buildWrappers>
<hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.14.1">
<strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
<timeoutMinutes>60</timeoutMinutes>
</strategy>
<operationList>
<hudson.plugins.build__timeout.operations.FailOperation/>
</operationList>
</hudson.plugins.build__timeout.BuildTimeoutWrapper>
<org.jvnet.hudson.tools.versionnumber.VersionNumberBuilder plugin="versionnumber@1.4.1">
<versionNumberString>15.1.0.${BUILD_NUMBER}</versionNumberString>
<projectStartDate>1969-12-31 05:00:00.0 UTC</projectStartDate>
<environmentVariableName>MasterBuildVersion</environmentVariableName>
<oBuildsToday>-1</oBuildsToday>
<oBuildsThisMonth>-1</oBuildsThisMonth>
<oBuildsThisYear>-1</oBuildsThisYear>
<oBuildsAllTime>-1</oBuildsAllTime>
<skipFailedBuilds>false</skipFailedBuilds>
<useAsBuildDisplayName>true</useAsBuildDisplayName>
</org.jvnet.hudson.tools.versionnumber.VersionNumberBuilder>
</buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>