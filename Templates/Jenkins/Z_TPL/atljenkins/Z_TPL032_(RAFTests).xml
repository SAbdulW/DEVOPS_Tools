<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>DevRootPath</name>
          <description></description>
          <defaultValue>D:\ws</defaultValue>
        </hudson.model.StringParameterDefinition>
        <com.wangyin.parameter.WHideParameterDefinition plugin="hidden-parameter@0.0.4">
          <name>VmIp</name>
          <description>IP address of the machine need to be tested</description>
          <defaultValue>#10.156.16.125</defaultValue>
        </com.wangyin.parameter.WHideParameterDefinition>
        <com.wangyin.parameter.WHideParameterDefinition plugin="hidden-parameter@0.0.4">
          <name>DnsName</name>
          <description></description>
          <defaultValue>ATLCONW12GL001</defaultValue>
        </com.wangyin.parameter.WHideParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ToolsRepo</name>
          <description></description>
          <defaultValue>DEVOPS_Tools</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ToolsBranch</name>
          <description></description>
          <defaultValue>origin/ci_wfo_env</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ConfigRepo</name>
          <description></description>
          <defaultValue>DEVOPS_Configs</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ConfigBranch</name>
          <description></description>
          <defaultValue>origin/Generic</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SourceScriptFolder</name>
          <description>The configuration Scripts + Env.params files that should be copied to the &quot;Workflows&quot; folder.
$ConfigRepo\IntegrationTests\RAF\Generic\*.*
Ex: DEVOPS_Configs\IntegrationTests\RAF\Generic\*</description>
          <defaultValue>DEVOPS_Configs\IntegrationTests\RAF\Generic\*</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ScriptLocator</name>
          <description>The path of the RAF script \suite that init the RAF. The path is relative the &apos;Workspace&apos; folder. The default location of the RAF is: raf\Regression Automation Framework.
Ex: raf\Regression Automation Framework\workflows\BasicInt.script</description>
          <defaultValue>raf\Regression Automation Framework\workflows\BasicInt.script</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RafParams</name>
          <description>Optional: Additional parameters to be add on-top of the default =&gt; (DefaultRafParams=--param InstallDir:&quot;$WORKSPACE\raf\Regression Automation Framework&quot; --param ServerNameApp:$VmIp --param ServerNameConsolidate:$VmIp --param WinDomain:$VmIp --param ReportDir:$WORKSPACE\reports --param ReportsCentralDirectory:&quot;$WORKSPACE\reports&quot; --param ReportFolderFormat:curr)</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RafScriptsVersion</name>
          <description>Optional:    The script version located in the following GAV: group: &apos;com.verint.automation&apos;, name: &apos;TestsScripts&apos;, version: &quot;${rafScriptsVersion}&quot; in ATLArtifactory, automation-release</description>
          <defaultValue>11.2.1.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RafProductsVersion</name>
          <description>Optional:    The RAF products version located in the following GAV: group: &apos;com.verint.automation&apos;, name: &apos;raf_products&apos;, version: &quot;${rafProductsVersion}&quot; in ATLArtifactory, automation-release</description>
          <defaultValue>11.2.1.4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.LabelParameterDefinition plugin="nodelabelparameter@1.5.1">
          <name>WhereToRunRaf</name>
          <description>Optional: The Node\Pool to run this job. Default=ATL-FTW-Slaves</description>
          <defaultValue>ATL-FTW-Slaves</defaultValue>
          <allNodesMatchingLabel>false</allNodesMatchingLabel>
          <triggerIfResult>allCases</triggerIfResult>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.LabelParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <groovyScriptContent>def TIME_STAMP=new Date().toString().replaceAll(&quot;[^a-zA-Z0-9]+&quot;,&quot;&quot;);
def map = [TIME_STAMP: TIME_STAMP]</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors>
        <org.jenkinsci.plugins.sharedobjects.SharedObjectJobProperty plugin="shared-objects@0.44">
          <populateSharedObjects>false</populateSharedObjects>
        </org.jenkinsci.plugins.sharedobjects.SharedObjectJobProperty>
        <org.jenkinsci.plugins.sharedobjects.ToolInstallationJobProperty plugin="shared-objects@0.44">
          <populateToolInstallation>false</populateToolInstallation>
        </org.jenkinsci.plugins.sharedobjects.ToolInstallationJobProperty>
      </contributors>
    </EnvInjectJobProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.4">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@2.3.4">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>git@atlgit:${ToolsRepo}</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>$ToolsBranch</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>$ToolsRepo</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.3.4">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>git@atlgit:${ConfigRepo}</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>$ConfigBranch</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>${ConfigRepo}</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <assignedNode>${WhereToRunRaf}</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <customWorkspace>${DevRootPath}</customWorkspace>
  <builders>
    <hudson.tasks.BatchFile>
      <command>echo DefaultRafParams=%DefaultRafParams%&#xd;
echo RafInstallDir=%RafInstallDir%&#xd;
echo SourceScriptFolder=%SourceScriptFolder%&#xd;
echo ScriptLocation=%ScriptLocation%&#xd;
echo RafParams=%RafParams%</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>rem ----- rm -rfv &quot;%WORKSPACE%reports\curr&quot;&#xd;
rd /S /Q &quot;%WORKSPACE%\reports\curr&quot;&#xd;
rd /S /Q &quot;%WORKSPACE%\raf&quot;&#xd;
cmd /c taskkill /F /FI &quot;IMAGENAME eq werFault.exe*&quot;&#xd;
cmd /c taskkill /F /FI &quot;IMAGENAME eq raf*&quot;&#xd;
cmd /c taskkill /IM iexplorer.exe*&#xd;
cmd /c taskkill /F /IM  IEDriverServer.exe* &#xd;
echo Set Hosts file with   %VmIp%    %DnsName%&#xd;
cmd /c &quot;echo %VmIp%    %DnsName%&gt;C:\Windows\System32\drivers\etc\hosts&quot;&#xd;
&#xd;
exit 0</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.gradle.Gradle plugin="gradle@1.24">
      <description></description>
      <switches>-i -Prafdir=&quot;${workspace}/raf&quot; --refresh-dependencies -PrafScriptsVersion=${RafScriptsVersion} -PrafProductsVersion=${RafProductsVersion} -PcurrentVersion=${MasterBuildVersion} </switches>
      <tasks>installRaf</tasks>
      <rootBuildScriptDir>${workspace}\${ToolsRepo}\IntegrationTests\RAF\Generic\Download</rootBuildScriptDir>
      <buildFile></buildFile>
      <gradleName>(Default)</gradleName>
      <useWrapper>true</useWrapper>
      <makeExecutable>false</makeExecutable>
      <fromRootBuildScriptDir>true</fromRootBuildScriptDir>
      <useWorkspaceAsHome>true</useWorkspaceAsHome>
    </hudson.plugins.gradle.Gradle>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
          <arg1>$SourceScriptFolder</arg1>
          <arg2></arg2>
          <ignoreCase>false</ignoreCase>
        </condition>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.BatchFile>
          <command>rem ----------- Copying Scriptfile from git to the script location ---------------&#xd;
pushd %WORKSPACE%&#xd;
xcopy /S /E /Y &quot;%SourceScriptFolder%&quot; &quot;%RafInstallDir%&quot;</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <hudson.tasks.BatchFile>
      <command>echo &quot;%RafInstallDir%\rafcli.exe&quot; &quot;%ScriptLocation%&quot; %DefaultRafParams% %RafParams%&#xd;
echo ==========&#xd;
&#xd;
&quot;%RafInstallDir%\rafcli.exe&quot; &quot;%ScriptLocation%&quot; %DefaultRafParams% %RafParams%&#xd;
&#xd;
echo ================= done=================================&#xd;
</command>
    </hudson.tasks.BatchFile>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
        <worstResult>
          <name>FAILURE</name>
          <ordinal>2</ordinal>
          <color>RED</color>
          <completeBuild>true</completeBuild>
        </worstResult>
        <bestResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </bestResult>
      </condition>
      <buildStep class="hudson.tasks.BatchFile">
        <command>echo Delete Hosts file &#xd;
cmd /c &quot;echo 127.0.0.1    localhost &gt;C:\Windows\System32\drivers\etc\hosts&quot;&#xd;
&#xd;
exit 0</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.3">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>HTML Report</reportName>
          <reportDir>$WORKSPACE\reports\curr</reportDir>
          <reportFiles>report.html</reportFiles>
          <keepAll>true</keepAll>
          <allowMissing>true</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.14.1">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Build timed out (after {0} minutes). Marking the build as failed.</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <org.jvnet.hudson.tools.versionnumber.VersionNumberBuilder plugin="versionnumber@1.4.1">
      <versionNumberString>${MasterBuildVersion}</versionNumberString>
      <projectStartDate>1969-12-31 05:00:00.0 UTC</projectStartDate>
      <environmentVariableName>MasterBuildVersion</environmentVariableName>
      <oBuildsToday>-1</oBuildsToday>
      <oBuildsThisMonth>-1</oBuildsThisMonth>
      <oBuildsThisYear>-1</oBuildsThisYear>
      <oBuildsAllTime>-1</oBuildsAllTime>
      <skipFailedBuilds>false</skipFailedBuilds>
      <useAsBuildDisplayName>true</useAsBuildDisplayName>
    </org.jvnet.hudson.tools.versionnumber.VersionNumberBuilder>
    <EnvInjectBuildWrapper plugin="envinject@1.90">
      <info>
        <propertiesContent>DefaultRafParams=--param InstallDir:&quot;$WORKSPACE\raf\Regression Automation Framework&quot; --param ServerNameApp:$VmIp --param ServerNameConsolidate:$VmIp --param WinDomain:$VmIp --param ReportDir:$WORKSPACE\reports --param ReportsCentralDirectory:&quot;$WORKSPACE\reports&quot; --param ReportFolderFormat:curr

RafInstallDir=$WORKSPACE\raf\Regression Automation Framework\

SourceScriptFolder=$WORKSPACE\$SourceScriptFolder

ScriptLocation=$WORKSPACE\$ScriptLocator

ReportDir=$WORKSPACE\reports
RafParams=$RafParams</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>